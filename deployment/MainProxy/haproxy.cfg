global
   maxconn 4096
   daemon

defaults
   log   global
   mode   http
   # logs which servers requests go to, plus current connections and a whole lot of other stuff 
   option   httplog
   option   dontlognull
   retries   3
   option redispatch
   maxconn   2000
   timeout connect  5000
   timeout client   5000
   timeout server   5000
   errorfile 400 /usr/local/etc/haproxy/errors/400.http
   errorfile 403 /usr/local/etc/haproxy/errors/403.http
   errorfile 408 /usr/local/etc/haproxy/errors/408.http
   errorfile 500 /usr/local/etc/haproxy/errors/500.http
   errorfile 502 /usr/local/etc/haproxy/errors/502.http
   errorfile 503 /usr/local/etc/haproxy/errors/503.http
   errorfile 504 /usr/local/etc/haproxy/errors/504.http
   log        127.0.0.1       local0
   log        127.0.0.1       local7 debug
   option httpchk
   
frontend webserver
   bind :8080
   bind :8080 ssl crt /usr/local/etc/haproxy/xip.io.pem
   bind :8443 ssl crt /usr/local/etc/haproxy/xip.io.pem
   acl is8080 dst_port 8080
   http-request replace-value Host (.*):8080 \1
   http-request redirect code 301 location https://%[req.hdr(Host)]:8443%[capture.req.uri] if is8080
   http-request redirect scheme https code 301 if !{ ssl_fc }
   mode http
   default_backend nodes

backend nodes
   mode http
   balance roundrobin
   option forwardfor
   option httpchk HEAD / HTTP/1.1\r\nHost:localhost
   server www1 MainApp1:9001 check
   server www2 MainApp2:9002 check
   http-request set-header X-Forwarded-Port %[dst_port]
   http-request add-header X-Forwarded-Proto https if { ssl_fc }
   
resolvers mydns
   nameserver www1 MainApp1:9001 
   nameserver www2 MainApp2:9002
   
listen stats
   bind :1936
   mode http
   stats enable
   stats scope webserver
   stats scope nodes
   stats scope static
   stats scope static_httpclose
   stats realm Haproxy\ Statistics
   stats uri /
   stats auth haproxy:pass